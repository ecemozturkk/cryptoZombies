{\rtf1\ansi\ansicpg1254\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red14\green12\blue17;\red202\green202\blue202;
\red212\green212\blue212;\red167\green197\blue152;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c6667\c5098\c8627;\cssrgb\c83137\c83137\c83137;
\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c80784\c56863\c47059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 pragma\cf4 \strokec4  \cf2 \strokec2 solidity\cf4 \strokec4  \cf5 \strokec5 >=\cf6 \strokec6 0.5.0\cf4 \strokec4  \cf5 \strokec5 <\cf6 \strokec6 0.6.0\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf7 \strokec7 "./zombiefactory.sol"\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  KittyInterface \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 function\cf4 \strokec4  getKitty\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  _id\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 external\cf4 \strokec4  view \cf2 \strokec2 returns\cf4 \strokec4  \cf5 \strokec5 (\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 bool\cf4 \strokec4  isGestating\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 bool\cf4 \strokec4  isReady\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  cooldownIndex\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  nextActionAt\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  siringWithId\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  birthTime\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  matronId\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  sireId\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  generation\cf5 \strokec5 ,\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  genes\cb1 \
\cb3   \cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  ZombieFeeding \cf2 \strokec2 is\cf4 \strokec4  ZombieFactory \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   KittyInterface kittyContract\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 modifier\cf4 \strokec4  onlyOwnerOf\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  _zombieId\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     require\cf5 \strokec5 (\cf4 \strokec4 msg\cf5 \strokec5 .\cf4 \strokec4 sender \cf5 \strokec5 ==\cf4 \strokec4  zombieToOwner\cf5 \strokec5 [\cf4 \strokec4 _zombieId\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3     _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  setKittyContractAddress\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  _address\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 external\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     kittyContract \cf5 \strokec5 =\cf4 \strokec4  KittyInterface\cf5 \strokec5 (\cf4 \strokec4 _address\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  _triggerCooldown\cf5 \strokec5 (\cf4 \strokec4 Zombie storage _zombie\cf5 \strokec5 )\cf4 \strokec4  internal \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     _zombie\cf5 \strokec5 .\cf4 \strokec4 readyTime \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 uint32\cf5 \strokec5 (\cf4 \strokec4 now \cf5 \strokec5 +\cf4 \strokec4  cooldownTime\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  _isReady\cf5 \strokec5 (\cf4 \strokec4 Zombie storage _zombie\cf5 \strokec5 )\cf4 \strokec4  internal view \cf2 \strokec2 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 _zombie\cf5 \strokec5 .\cf4 \strokec4 readyTime \cf5 \strokec5 <=\cf4 \strokec4  now\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  feedAndMultiply\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  _zombieId\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _targetDna\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4  memory _species\cf5 \strokec5 )\cf4 \strokec4  internal onlyOwnerOf\cf5 \strokec5 (\cf4 \strokec4 _zombieId\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     Zombie storage myZombie \cf5 \strokec5 =\cf4 \strokec4  zombies\cf5 \strokec5 [\cf4 \strokec4 _zombieId\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3     require\cf5 \strokec5 (\cf4 \strokec4 _isReady\cf5 \strokec5 (\cf4 \strokec4 myZombie\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3     _targetDna \cf5 \strokec5 =\cf4 \strokec4  _targetDna \cf5 \strokec5 %\cf4 \strokec4  dnaModulus\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint\cf4 \strokec4  newDna \cf5 \strokec5 =\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 myZombie\cf5 \strokec5 .\cf4 \strokec4 dna \cf5 \strokec5 +\cf4 \strokec4  _targetDna\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 /\cf4 \strokec4  \cf6 \strokec6 2\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 keccak256\cf5 \strokec5 (\cf4 \strokec4 abi\cf5 \strokec5 .\cf4 \strokec4 encodePacked\cf5 \strokec5 (\cf4 \strokec4 _species\cf5 \strokec5 ))\cf4 \strokec4  \cf5 \strokec5 ==\cf4 \strokec4  keccak256\cf5 \strokec5 (\cf4 \strokec4 abi\cf5 \strokec5 .\cf4 \strokec4 encodePacked\cf5 \strokec5 (\cf7 \strokec7 "kitty"\cf5 \strokec5 )))\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3       newDna \cf5 \strokec5 =\cf4 \strokec4  newDna \cf5 \strokec5 -\cf4 \strokec4  newDna \cf5 \strokec5 %\cf4 \strokec4  \cf6 \strokec6 100\cf4 \strokec4  \cf5 \strokec5 +\cf4 \strokec4  \cf6 \strokec6 99\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     _createZombie\cf5 \strokec5 (\cf7 \strokec7 "NoName"\cf5 \strokec5 ,\cf4 \strokec4  newDna\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     _triggerCooldown\cf5 \strokec5 (\cf4 \strokec4 myZombie\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3   \cf2 \strokec2 function\cf4 \strokec4  feedOnKitty\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  _zombieId\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  _kittyId\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 public\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint\cf4 \strokec4  kittyDna\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 (,,,,,,,,,\cf4 \strokec4 kittyDna\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  kittyContract\cf5 \strokec5 .\cf4 \strokec4 getKitty\cf5 \strokec5 (\cf4 \strokec4 _kittyId\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     feedAndMultiply\cf5 \strokec5 (\cf4 \strokec4 _zombieId\cf5 \strokec5 ,\cf4 \strokec4  kittyDna\cf5 \strokec5 ,\cf4 \strokec4  \cf7 \strokec7 "kitty"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
}